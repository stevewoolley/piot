---
- name: 'Set hostname facts'
  set_fact:
    full_hostname: "{{ inventory_hostname }}"
    short_hostname: "{{ inventory_hostname.split('.', 1)[0] }}"

- name: 'Install python dependencies'
  pip:
    name: [
      'boto3',
      'awscli',
      'psutil',
      'AWSIoTPythonSDK',
      'gpiozero',
      'watchtower'
    ]
    state: latest

- name: 'Clone/Update latest repo'
  git:
    repo: https://github.com/stevewoolley/piot.git
    dest: piot
    accept_hostkey: yes
  become: yes
  become_user: "{{ user }}"

- name: 'Install IoT private key'
  copy:
    src: ~/.ssh/credentials/{{ iot_cert }}-private.pem.key
    dest: /home/pi/piot/{{ iot_cert }}-private.pem.key
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 600

- name: 'Install IoT certificate'
  copy:
    src: ~/.ssh/credentials/{{ iot_cert }}-certificate.pem.crt
    dest: /home/pi/piot/{{ iot_cert }}-certificate.pem.crt
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 600

- name: 'Install Root CA'
  copy:
    src: ~/.ssh/credentials/root.ca.pem
    dest: /home/pi/piot/root.ca.pem
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 600

- name: 'Install Amazon Root CA'
  copy:
    src: ~/.ssh/credentials/AmazonRootCA1.pem
    dest: /home/pi/piot/AmazonRootCA1.pem
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 600

- name: 'Create iot log file'
  file:
    path: /var/log/iot.log
    state: touch
    owner: root
    group: adm
    mode: 0660

- name: 'Configure logrotate'
  template:
    src: iot_logrotate.j2
    dest: /etc/logrotate.d/iot
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0644
  notify:
    - logrotate-apply
